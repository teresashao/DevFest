from flask import Flask, jsonify
import json
import mysql.connector
app = Flask(__name__)

db = mysql.connector.connect(
    host='devfest24-413221:us-central1:devfest24sql',
    user='dbuserdbuser',
    #password='',
    database='JournifyDatabase'
    #Connection Name: devfest24-413221:us-central1:devfest24sql
    #IP: 34.123.3.179 3306
)
cursor = connection.cursor()

create_table_query = '''    
    CREATE TABLE IF NOT EXISTS example (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255),
        age INT
)
'''

# Execute the query
cursor.execute(create_table_query)

try:
    # Example data to insert (replace with your data)
    data_to_insert = (99999, 'Sky', 19)#journal entry, emotion dicitonary

    insert_query = 'INSERT INTO example_table (id, name, age) VALUES (%s, %s, %s)'

    # Execute the query with the data
    cursor.execute(insert_query, data_to_insert)

    # Commit the changes
    connection.commit()

    print('Data inserted successfully!')
except Exception as e:
    print(f'Error: {str(e)}')
finally:
    # Close the cursor and connection
    cursor.close()
    connection.close()




"""
@app.route('/api/data', methods=['GET'])
def add_data():
    try:
        # Assume you receive data in JSON format with a journal entry
        
        
        # Evaluate sentiment for the journal entry
        sentiment_result = eval_sentiment(journal_entry)

        # Insert both the journal entry and sentiment result into the database
        if insert_data(journal_entry, sentiment_result):
            return jsonify({'message': 'Data added successfully'})
        else:
            return jsonify({'error': 'Failed to add data'}), 500
    except Exception as e:
        return jsonify({'error': str(e)}), 500



class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)

    def __repr__(self):
        return f'<User {self.username}>'

if __name__ == '__main__':
    app.run(debug=True)
    """